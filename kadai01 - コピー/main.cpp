//=============================================================================
//
// kadai01 [main.cpp]
//
//=============================================================================
#include <windows.h>

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TITLE ("〜ラブライブ！性格診断〜")
#define Q_MAX (30)
#define A_MAX (9)

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
int Kekka();

//*****************************************************************************
// グローバル変数
//*****************************************************************************
char Q[Q_MAX][256] = {
	{ "頼られると嫌とは言えない性格だ" } ,
	{ "出かけるなら、静かな所よりも賑やかな場所の方がいい" },
	{ "ゲームをするなら頭を使うものより気軽なやつがいい" },
	{ "昼より夜の方が好き" },
	{ "どちらかというとマゾだと思う" },
	{ "年上よりも、年下に好かれやすい" },
	{ "美味しいものは独り占めしたい" },
	{ "犬か猫で例えると、自分は犬の方だと思う" },
	{ "甘えられるよりも甘える方が好き" },
	{ "相手に嫌われも言うべき事は言う" },
	{ "本編よりもサイドストーリーを進める癖がある" },
	{ "悩む時は、誰にも相談せずに一人で考え込んでしまう" },
	{ "守るよりも攻める方が好き" },
	{ "メールで会話するよりも電話で喋る方が好きだ" },
	{ "食事は大勢で賑やかな方がいい" },
	{ "明日やればいい事もついつい今日中にやってしまう" },
	{ "古典や歴史は好きな方だ" },
	{ "目標が達成できれば結果なんて気にしない" },
	{ "好きなものはなるべく最後まで残しておく方だ" },
	{ "他人のノリに合わせる事が出来る" },
	{ "あまり自分の話はしたくない" },
	{ "自分はプライドが高い方だと思う" },
	{ "勝利を得るためには他者を貶めることも作戦の一つだ" },
	{ "夢中になると周りが見えなくなる性格だ" },
	{ "例え苦手な人でも上司や年配者には敬意を払うべきだ" },
	{ "流行には疎い方だと思う" },
	{ "アイドルには色気なんて不要だ" },
	{ "多くの人が救えるなら、自分が犠牲になっても構わない" },
	{ "他人と歩調を合わせるのが下手だ" },
	{ "初めての体験の時、不安や恐れよりも期待や興奮が勝る" }
};
char A[A_MAX][256] = {
	{ "\t〜海未ちゃんタイプ〜\t\n努力化ｄ正義感が強い、品行方正な優等生タイプ。\nただ、融通が利かず少々頑固なところがあるため、\n周りからは面倒な人間だと思われているかも。\n\n" },
	{ "\t〜絵里ちゃんタイプ〜\t\n素直になれない意固地なツンデレ生徒会長タイプ。\n周囲の期待や課せられた責務に忠実であろうとするあまり\n自分を抑圧してしまう愛すべき不器用。\n\n" },
	{ "\t〜にこちゃんタイプ〜\t\n人情家で感激家で見栄っ張りな一日署長タイプ。\n唯我独尊を気取っているが、本当は他者から認めれられたい欲求心が強く、\n基本人間が好き、甘えたい、甘えられたい。\n\n" },
	{ "\t〜穂乃果ちゃんタイプ〜\t\nだって可能性感じたんだそうだ進めタイプ。\n熱血直情行動派。マニュアルは読まない派。落ち込みやすい方ですが立ち直りも人一倍早いです。\n\n" },
	{ "\t〜花陽ちゃんタイプ〜\t\n博愛主義者で少し天然な心優しい飼育係タイプ。\n察しが良くバランス感覚に優れているので、仲裁役や進行役に向いています。\n取り合えず敵は自分の弱気かな。\n\n" },
	{ "\t〜凛ちゃんタイプ〜\t\n犬のような、猫のような、無邪気な後輩タイプ。\n排他的で批判的な面があり、中々深い人間関係にはなりませんが、一度気を許した相手にはべったりになります。\n\n" },
	{ "\t〜ことりちゃんタイプ〜\t\n縁の下の力持ち。頼れるみんなの保健委員タイプ。\nマイペースであまり目立つ事は好みませんが、\n責任感や向上心、協調性は強く、ナンバー２や中堅で存在感を発揮します。\n\n" },
	{ "\t〜真姫ちゃんタイプ〜\t\n一匹狼を気取る面倒くさいツンデレお嬢様タイプ。\n人付き合いが面倒で内に篭りがちだが、\n一度心を開いた相手には全幅の信頼を置きます。\n\n" },
	{ "\t〜希ちゃんタイプ〜\t\n清潔あわせ持つスピリチュアルな副会長タイプ\n野心家で目的達成のために陰で暗躍する策士。\n一方で、相手を尊重し敬える素晴らしい人間性を持っています。\n\n" }
};
int Anum = -1, Qnum = 0;

//=============================================================================
// ウィンドウ処理
//=============================================================================
int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdline, int nCmdshow)
{

	UINT start, ans;

	//スタート
	start = MessageBox(NULL, "\t〜ラブライブ！性格診断スタート〜\t", TITLE, MB_YESNO| MB_ICONQUESTION);

	if (start == IDYES) {

		while (Anum == -1)
		{
			if (Qnum < 0) Qnum = 0 ;
			ans = MessageBox(NULL, Q[Qnum], TITLE, MB_YESNO);

			if (ans == IDYES) {
				switch (Qnum)
				{
				case 25:
					Anum = 0;
					Kekka();
					break;
				case 26:
					Anum = 0;
					Kekka();
					break;
				case 27:
					Anum = 1;
					Kekka();
					break;
				case 28:
					Anum = 2;
					Kekka();
					break;
				case 29:
					Anum = 3;
					Kekka();
					break;
				}
				Qnum += 5;
			}
			else if (ans == IDNO) {
				switch (Qnum)
				{
				case 4:
					Anum = 4;
					Kekka();
					break;
				case 9:
					Anum = 4;
					Kekka();
					break;
				case 14:
					Anum = 5;
					Kekka();
					break;
				case 19:
					Anum = 6;
					Kekka();
					break;
				case 24:
					Anum = 7;
					Kekka();
					break;
				case 29:
					Anum = 8;
					Kekka();
					break;
				}
				Qnum += 1;
			}
			else {
				MessageBox(NULL, "強制終了します。\n", TITLE, MB_OK| MB_ICONSTOP);
				exit(-1);
			}
		}
	}
	else {
		exit(-1);
	}

	return 0;
}

//=============================================================================
// 結果処理
//=============================================================================
int Kekka() {
	UINT retry;

	retry = MessageBox(NULL, A[Anum], TITLE, MB_RETRYCANCEL);
	if (retry == IDRETRY) {
		Anum = -1;
		Qnum = -10;
	}
	else if (retry == IDCANCEL)
	{
		exit(-1);
	}
}
